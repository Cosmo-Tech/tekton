apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: {{ include "api-deployment.fullname" . }}-tekton-task
  labels:
  {{- include "api-deployment.labels" . | nindent 4 }}
spec:
  params:
  - name: registryUrl
    type: string
  - name: chartName
    type: string
  - name: chartVersion
    type: string
  - name: namespace
    type: string
  - name: helmChartPullType
    type: string
  steps:
  - image: bitnami/kubectl:1.32.1
    name: kubectl
    script: |
      #!/bin/sh
      echo "Kubectl list objects."
      kubectl get all
      ls -alh /workspace/helm-values
      ls -alh /workspace/helm-secrets
      cat /workspace/helm-values/config.yaml
      cat /workspace/helm-secrets/.dockerconfigjson
    volumeMounts:
    - mountPath: /workspace/helm-values
      name: helm-values-volume
    - mountPath: /workspace/helm-secrets
      name: helm-credentials
  - image: alpine/helm:3.12.3
    name: lint-chart
    script: |
      #!/bin/sh
      cat /workspace/helm-secrets/.dockerconfigjson
      echo "Linting Helm chart..."
      if [ "$(params.helmChartPullType)" = "oci" ]; then
        helm pull --registry-config /workspace/helm-secrets/.dockerconfigjson oci://$(params.registryUrl)/$(params.chartName) --version $(params.chartVersion)
        mkdir $(params.chartName)
        tar -xvzf $(params.chartName)-$(params.chartVersion).tgz -C $(params.chartName) --strip-components=1
      else
        helm repo add cosmotech https://$(params.registryUrl)
        helm repo update
        helm pull cosmotech/$(params.chartName) --version $(params.chartVersion) --untar
      fi
      # Run helm lint and allow script to continue even if linting fails
      helm lint ./$(params.chartName) || true
    volumeMounts:
    - mountPath: /workspace/helm-secrets
      name: helm-credentials
  - image: alpine/helm:3.16.3
    name: deploy-chart
    script: |
      #!/bin/sh
      echo "Deploying Helm chart..."
      if [ "$(params.helmChartPullType)" = "oci" ]; then
        helm upgrade --registry-config  /workspace/helm-secrets/.dockerconfigjson --install $(params.chartName) oci://$(params.registryUrl)/$(params.chartName) \
          --version $(params.chartVersion) --namespace $(params.namespace) --values /workspace/helm-values/config.yaml
      else
        helm repo add cosmotech https://$(params.registryUrl)
        helm repo update
        helm upgrade --install $(params.chartName) cosmotech/$(params.chartName) --version $(params.chartVersion) \
          --namespace $(params.namespace) --values /workspace/helm-values/config.yaml
      fi
    volumeMounts:
    - mountPath: /workspace/helm-values
      name: helm-values-volume
    - mountPath: /workspace/helm-secrets
      name: helm-credentials
  volumes:
  - name: helm-credentials
    secret:
      secretName: {{ include "api-deployment.fullname" . }}-api-docker-secret
  - configMap:
      name: {{ include "api-deployment.fullname" . }}-api-config
    name: helm-values-volume